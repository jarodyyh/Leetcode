class Solution {
    public char nextGreatestLetter(char[] letters, char target) {
        // method: use 1-26 numbers to replace letters
        //         for wrap around, if target at the first or last in list, need to check the last or first element
        
        if (letters.length == 1) {
            return letters[0];
        }
        
        int left = 0;
        int right = letters.length - 1;
        
        while (left + 1 < right) {
            int mid = left + (right - left) / 2;
            
            if (letters[mid] - 'a' <= target - 'a') {
                left = mid;
            } else {
                right = mid;
            }
        }
        
        if (letters[right] <= target) {
            return letters[0];
        }else {
            return letters[left] - target > 0 ? letters[left] : letters[right];
        }
    }
}
