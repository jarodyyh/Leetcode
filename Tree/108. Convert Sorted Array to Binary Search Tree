class Solution {
    public TreeNode sortedArrayToBST(int[] nums) {
        // method recursion:
        // find mid element to be root of current level
        // mid of left part as root.left, mid of right part as root.right        
        if (nums == null) {
            return null;
        }
        
        return helper(nums, 0, nums.length - 1);
    }
    
    private TreeNode helper(int[] nums, int start, int end){
        if (start > end) {
            return null;
        }
        int mid = start + (end - start) / 2;
        TreeNode root = new TreeNode(nums[mid]); 
        root.left = helper(nums, start, mid - 1);
        root.right = helper(nums, mid + 1, end);
        return root;
    }
    
    // Time O(n) SpaceO(n)
}
